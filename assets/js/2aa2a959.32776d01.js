"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[5077],{2929:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>g});const r=JSON.parse('{"id":"features/logging","title":"Logger","description":"A simple way to log messages using native node modules.","source":"@site/docs/features/logging.mdx","sourceDirName":"features","slug":"/features/logging","permalink":"/docs/next/features/logging","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Logger","description":"A simple way to log messages using native node modules."},"sidebar":"tutorialSidebar","previous":{"title":"DB in memory","permalink":"/docs/next/features/in-memory-db"},"next":{"title":"CLI","permalink":"/docs/next/category/cli"}}');var o=n(4848),t=n(8453);const i={sidebar_position:10,title:"Logger",description:"A simple way to log messages using native node modules."},l="Logging",a={},g=[{value:"Logger methods",id:"logger-methods",level:2},{value:"Logger format",id:"logger-format",level:2},{value:"Register logger in the container",id:"register-logger-in-the-container",level:2},{value:"Usage example",id:"usage-example",level:2},{value:"Support us \u2764\ufe0f",id:"support-us-\ufe0f",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"logging",children:"Logging"})}),"\n",(0,o.jsx)(s.p,{children:"Logger is a class that provides a set of methods to log messages using native node modules. It is a simple way to log messages in your application and it is already included in the ExpressoTS framework."}),"\n",(0,o.jsx)(s.p,{children:"Logger take two parameters:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"message: The message to be logged."}),"\n",(0,o.jsx)(s.li,{children:"module: The service name associated with the log."}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"logger-methods",children:"Logger methods"}),"\n",(0,o.jsx)(s.p,{children:"There are 4 methods available:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-typescript",metastring:'title="Logger usage"',children:"log.<method>(message: string, module?: string);\n"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"info"}),": Logs an informational message."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"warn"}),": Logs a warning message."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"error"}),": Logs an error message."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"msg"}),": Logs a message."]}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"logger-format",children:"Logger format"}),"\n",(0,o.jsxs)(s.p,{children:["Using ",(0,o.jsx)(s.code,{children:"info()"})," method as an example, the logger format is:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"[ExpressoTS] 00/00/0000 00:00:00 PM [PID:30319] INFO [app-controller] Hello from Expressots!\n"})}),"\n",(0,o.jsx)(s.h2,{id:"register-logger-in-the-container",children:"Register logger in the container"}),"\n",(0,o.jsxs)(s.p,{children:["The logger is already included in the ExpressoTS framework but first you need to register it in the container. You can do this in the ",(0,o.jsx)(s.code,{children:"configureServices"})," method of your application."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-typescript",children:"export class App extends AppExpress {\n    protected configureServices(): void | Promise<void> {\n        this.provider.register(Logger);\n    }\n}\n"})}),"\n",(0,o.jsx)(s.h2,{id:"usage-example",children:"Usage example"}),"\n",(0,o.jsx)(s.p,{children:"Once the logger is registered in the container, you can inject it into your services, controllers, use cases, etc."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-typescript",children:'export class YourUseUseCase {\n    constructor(@inject(Logger) private log: Logger) {}\n\n    execute() {\n        this.log.info("Testing log message", "your-use-case");\n        return "Hello ExpressoTS!";\n    }\n}\n'})}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"support-us-\ufe0f",children:"Support us \u2764\ufe0f"}),"\n",(0,o.jsxs)(s.p,{children:["ExpressoTS is an MIT-licensed open source project. It's an independent project with ongoing development made possible thanks to your support.\nIf you'd like to help, please read our ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.a,{href:"/docs/next/support-us",children:"support guide"})}),"."]})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var r=n(6540);const o={},t=r.createContext(o);function i(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);