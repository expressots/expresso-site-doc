"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[635],{7631:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>p,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"core/app-provider","title":"App provider","description":"The App class is the core of an ExpressoTS application.","source":"@site/versioned_docs/version-2.16.2/core/app-provider.mdx","sourceDirName":"core","slug":"/core/app-provider","permalink":"/docs/2.16.2/core/app-provider","draft":false,"unlisted":false,"tags":[],"version":"2.16.2","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"App provider","description":"The App class is the core of an ExpressoTS application."},"sidebar":"tutorialSidebar","previous":{"title":"First steps","permalink":"/docs/2.16.2/core/first-steps"},"next":{"title":"App container","permalink":"/docs/2.16.2/core/app-container"}}');var s=i(4848),t=i(8453);const o=i.p+"assets/images/app-life-cycle-cedff2c2723cc4846da3fe7e36742606.png",p={sidebar_position:1,title:"App provider",description:"The App class is the core of an ExpressoTS application."},d="Application",a={},l=[{value:"App express",id:"app-express",level:2},{value:"Lifecycle hooks",id:"lifecycle-hooks",level:2},{value:"Hooks execution order",id:"hooks-execution-order",level:2},{value:"Method isDevelopment",id:"method-isdevelopment",level:2},{value:"Set global route prefix",id:"set-global-route-prefix",level:2},{value:"Support us \u2764\ufe0f",id:"support-us-\ufe0f",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"application",children:"Application"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"App"})," class is the core of an ExpressoTS application, handling server creation and configuration.\nIt allows you to set up middleware and providers during the bootstrapping process and offers lifecycle hooks\nto run code before, after, and during server shutdown."]}),"\n",(0,s.jsx)(n.h2,{id:"app-express",children:"App express"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"AppExpress"})," is the ",(0,s.jsx)(n.a,{href:"https://expressjs.com/",children:"Express.js"})," platform implementation specifically designed for ExpressoTS.\nIt integrates seamlessly with the Express.js ecosystem, providing a robust foundation for building\nand configuring applications within ExpressoTS."]}),"\n",(0,s.jsxs)(n.p,{children:["With full support for Express.js middleware, ",(0,s.jsx)(n.code,{children:"AppExpress"})," enables developers to efficiently manage application setup, execution, and shutdown processes,\nall while leveraging the familiar Express.js environment."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"The framework currently supports Express as its primary adapter, with Fastify and other possible in house server under development."})}),"\n",(0,s.jsxs)(n.p,{children:["Here is the ",(0,s.jsx)(n.code,{children:"App"})," class extending the ",(0,s.jsx)(n.code,{children:"AppExpress"})," adapter:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="app.provider.ts"',children:"export class App extends AppExpress {\n    private middleware: IMiddleware;\n    private provider: ProviderManager;\n\n    constructor() {\n        super();\n        this.middleware = container.get<IMiddleware>(Middleware);\n        this.provider = container.get(ProviderManager);\n    }\n\n    protected configureServices(): void {\n        this.provider.register(Env);\n\n        this.middleware.addBodyParser();\n        this.middleware.setErrorHandler();\n    }\n\n    protected postServerInitialization(): void {\n        if (this.isDevelopment()) {\n            this.provider.get(Env).checkAll();\n        }\n    }\n\n    protected serverShutdown(): void {}\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"this.provider"}),": an object containing a register method that allows developers to register internal\nor external ExpressoTS-compatible providers. This method registers classes in the ExpressoTS container\nto be part of the dependency injection system, enabling the use of different scopes such as Transient, Scoped, and Singleton."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"this.middleware"}),": offers a set of out-of-the-box middlewares that can be used to configure your application.\nSee the complete list in the ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/docs/2.16.2/features/middleware",children:"Middleware section"})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Be sure to explore other functionalities available in the class through ",(0,s.jsx)(n.code,{children:"this"}),", like setGlobalRoutePrefix(), setEngine(), and more."]})}),"\n",(0,s.jsx)(n.h2,{id:"lifecycle-hooks",children:"Lifecycle hooks"}),"\n",(0,s.jsx)(n.p,{children:"An ExpressoTS application and its components follow a lifecycle managed by the framework.\nExpressoTS offers lifecycle hooks that let developers track important events and run specific\ncode within modules, providers, or controllers as these events happen."}),"\n",(0,s.jsx)(n.p,{children:"The diagram below shows the sequence of key lifecycle events, from application startup to when the Node.js process exits."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Add any service to initialize before the server starts."',children:"protected configureServices(): void | Promise<void> { }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Add any service to run after the server starts."',children:"protected postServerInitialization(): void | Promise<void> { }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Add any service to run after the server shuts down."',children:"protected serverShutdown(): void | Promise<void> { }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"hooks-execution-order",children:"Hooks execution order"}),"\n",(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsx)("img",{src:o,width:"700px",height:"700px",alt:"Lifecycle events"})}),"\n",(0,s.jsx)(n.h2,{id:"method-isdevelopment",children:"Method isDevelopment"}),"\n",(0,s.jsx)(n.p,{children:"It is a helper method that returns a boolean value indicating whether the application is running in development mode.\nThis method is useful for running specific code only in development environments."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Check if the application is running in development mode."',children:"this.isDevelopment(): boolean\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Currently this method is being used in the ",(0,s.jsx)(n.code,{children:"postServerInitialization"})," method to check if the application is running in development mode.\nIf it is, the ",(0,s.jsx)(n.code,{children:"Env"})," provider is used to check all environment variables."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="Check all environment variables in development mode."',children:"protected postServerInitialization(): void {\n    if (this.isDevelopment()) {\n        this.provider.get(Env).checkAll();\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"set-global-route-prefix",children:"Set global route prefix"}),"\n",(0,s.jsx)(n.p,{children:"You can set a global prefix for all routes in your application. This is useful when you want to version your APIs."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'@provide(App)\nclass App extends AppExpress {\n    private middleware: IMiddleware;\n    private provider: IProvider;\n\n    constructor() {\n        super();\n        this.middleware = container.get<IMiddleware>(Middleware);\n        this.provider = container.get<IProvider>(Provider);\n    }\n\n    protected configureServices(): void {\n        this.setGlobalRoutePrefix("/v1");\n    }\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"support-us-\ufe0f",children:"Support us \u2764\ufe0f"}),"\n",(0,s.jsxs)(n.p,{children:["ExpressoTS is an MIT-licensed open source project. It's an independent project with ongoing development made possible thanks to your support.\nIf you'd like to help, please read our ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/docs/2.16.2/support-us",children:"support guide"})}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>p});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);